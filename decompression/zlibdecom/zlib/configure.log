--------------------
./configure
Sat 20 Aug 2022 02:41:58 PM CST
Checking for gcc...
=== ztest97330.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest97330.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest97330.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest97330.c

Checking for shared library support...
=== ztest97330.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest97330.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest97330.so ztest97330.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest97330.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest97330.c
Checking for size_t... Yes.


=== ztest97330.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest97330.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest97330.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest97330 ztest97330.c
Checking for strerror... Yes.

=== ztest97330.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest97330.c
Checking for unistd.h... Yes.

=== ztest97330.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest97330.c
Checking for stdarg.h... Yes.

=== ztest97330.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest97330.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest97330.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest97330 ztest97330.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest97330.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest97330.c
Checking for return value of vsnprintf()... Yes.

=== ztest97330.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest97330.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat 20 Aug 2022 02:49:51 PM CST
Checking for gcc...
=== ztest99935.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest99935.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest99935.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest99935.c

Checking for shared library support...
=== ztest99935.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest99935.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest99935.so ztest99935.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest99935.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest99935.c
Checking for size_t... Yes.


=== ztest99935.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest99935.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest99935.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest99935 ztest99935.c
Checking for strerror... Yes.

=== ztest99935.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest99935.c
Checking for unistd.h... Yes.

=== ztest99935.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest99935.c
Checking for stdarg.h... Yes.

=== ztest99935.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest99935.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest99935.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest99935 ztest99935.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest99935.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest99935.c
Checking for return value of vsnprintf()... Yes.

=== ztest99935.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest99935.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Sat 20 Aug 2022 04:39:31 PM CST
Checking for gcc...
=== ztest104648.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest104648.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest104648.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest104648.c

Checking for shared library support...
=== ztest104648.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest104648.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest104648.so ztest104648.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest104648.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest104648.c
Checking for size_t... Yes.


=== ztest104648.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest104648.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest104648.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest104648 ztest104648.c
Checking for strerror... Yes.

=== ztest104648.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest104648.c
Checking for unistd.h... Yes.

=== ztest104648.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest104648.c
Checking for stdarg.h... Yes.

=== ztest104648.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest104648.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest104648.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest104648 ztest104648.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest104648.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest104648.c
Checking for return value of vsnprintf()... Yes.

=== ztest104648.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest104648.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Wed Nov  9 01:34:37 PM UTC 2022
Checking for gcc...
=== ztest179211.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest179211.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest179211.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest179211.c

Checking for shared library support...
=== ztest179211.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest179211.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest179211.so ztest179211.o
Building shared library libz.so.1.2.11 with gcc.

=== ztest179211.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest179211.c
Checking for size_t... Yes.


=== ztest179211.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest179211.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest179211.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest179211 ztest179211.c
Checking for strerror... Yes.

=== ztest179211.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest179211.c
Checking for unistd.h... Yes.

=== ztest179211.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest179211.c
Checking for stdarg.h... Yes.

=== ztest179211.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest179211.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest179211.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest179211 ztest179211.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest179211.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest179211.c
Checking for return value of vsnprintf()... Yes.

=== ztest179211.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest179211.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


